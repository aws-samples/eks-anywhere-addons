apiVersion: v1
kind: ConfigMap
metadata:
  name: test-configmap
  namespace: lacework
data:
  test.sh: |-
    #!/bin/bash
    kubectl wait pods -n lacework -l name=lacework-agent --for condition=Ready --timeout=90s
    sleep 30
    logs=$(kubectl logs -n lacework -l name=lacework-agent)
    echo -e "Kubectl Logs from Agent: \n ${logs}"
    if grep "stats.go" <<< "$logs"
    then 
      echo -e "\n ^‿^ Stats collection is running ^‿^"
      exit 0
    else
      echo -e "\n סּ︵סּ Stats collection is not running סּ︵סּ" 
      exit 1
    fi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: lacework-agent-testjob
  namespace: lacework
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
        - name: job
          image: 'alpine/k8s:1.26.2'
          imagePullPolicy: Always
          command:
            - /bin/test.sh
          volumeMounts:
            - name: test-configmap-volume
              mountPath: /bin/test.sh
              readOnly: true
              subPath: test.sh
      volumes:
        - name: test-configmap-volume
          configMap:
            defaultMode: 0700
            name: test-configmap
      restartPolicy: Never
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: lacework-agent-access-token-secret-reader
  namespace: lacework
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "watch", "list"]
  - apiGroups: [ "" ]
    resources: [ "pods/log" ]
    verbs: [ "get", "watch", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-lacework-agent-access-token
  namespace: lacework
subjects:
  - kind: User
    name: system:serviceaccount:lacework:default
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: lacework-agent-access-token-secret-reader
  apiGroup: rbac.authorization.k8s.io