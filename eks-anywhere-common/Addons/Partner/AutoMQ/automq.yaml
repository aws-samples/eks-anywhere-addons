apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: automq-release
  namespace: automq
spec:
  interval: 5m
  releaseName: automq-release
  targetNamespace: automq
  install:
    createNamespace: true
  dependsOn:
    - name: minio
      namespace: automq
  chart:
    spec:
      chart: kafka
      version: "31.5.0"
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: automq
  values:
    global:
      security:
        allowInsecureImages: true
    image:
      registry: automqinc
      repository: automq
      tag: 1.5.0-bitnami
      pullPolicy: Always
    listeners:
      client:
        containerPort: 9092
        protocol: PLAINTEXT
        name: CLIENT_SASL
        sslClientAuth: ""
    extraEnvVars:
      - name: KAFKA_S3_ACCESS_KEY
        value: "minioadmin"
      - name: KAFKA_S3_SECRET_KEY
        value: "minioadmin"
    controller:
      replicaCount: 1
      resources:
        requests:
          cpu: "1000m"
          memory: "2Gi"
        limits:
          cpu: "2000m"
          memory: "4Gi"
      heapOpts: -Xms1g -Xmx2g -XX:MetaspaceSize=96m -XX:MaxDirectMemorySize=1g
      extraConfig: |
        allow.everyone.if.no.acl.found=true
        elasticstream.enable=true
        autobalancer.client.auth.sasl.mechanism=PLAIN
        autobalancer.client.auth.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="inter_broker_user" password="interbroker-password-placeholder" user_inter_broker_user="interbroker-password-placeholder";
        autobalancer.client.auth.security.protocol=SASL_PLAINTEXT
        autobalancer.client.listener.name=INTERNAL
        s3.wal.cache.size=2147483648
        s3.block.cache.size=1073741824
        s3.stream.allocator.policy=POOLED_DIRECT
        s3.network.baseline.bandwidth=245366784
        s3.ops.buckets=1@s3://automq-ops?region=us-east-1&endpoint=http://minio:9000&pathStyle=true
        s3.data.buckets=0@s3://automq-data?region=us-east-1&endpoint=http://minio:9000&pathStyle=true
        s3.wal.path=0@s3://automq-data?region=us-east-1&endpoint=http://minio:9000&pathStyle=true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - automq-release
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - controller-eligible
                      - broker
              topologyKey: kubernetes.io/hostname
      persistence:
        size: 20Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
  namespace: automq
spec:
  interval: 10m
  releaseName: minio
  targetNamespace: automq
  install:
    createNamespace: true
  chart:
    spec:
      chart: minio
      version: 17.0.16
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: automq
  values:
    auth:
      rootUser: minioadmin
      rootPassword: minioadmin
    mode: standalone
    args:
      - "server"
      - "/bitnami/minio/data"
      - "--address"
      - ":9000"
    service:
      type: ClusterIP
      ports:
        api: 9000
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-bucket-creator
  namespace: automq
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: minio-client
        image: docker.io/bitnami/minio:2025.7.23-debian-12-r0
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Starting bucket creation job..."
            
            until mc alias set myminio http://minio:9000 minioadmin minioadmin --config-dir /tmp/.mc; do
              echo "waiting for minio service..."
              sleep 5
            done
            
            echo "MinIO is ready. Creating buckets..."
            
            mc mb myminio/automq-data --config-dir /tmp/.mc || true
            mc mb myminio/automq-ops --config-dir /tmp/.mc || true
            
            echo "Buckets creation process finished."