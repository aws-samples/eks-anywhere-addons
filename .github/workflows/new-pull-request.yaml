name: Run CI for ISV Addons

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Check Namespace YAML and Kubernetes Namespace
      run: |
        git fetch origin pull/${{ github.event.pull_request.number }}/head:pr_branch
        if [[ $(find . -type f -name "namespace.yaml" | wc -l) -eq 0 ]]; then
          echo "::error::namespace.yaml not found"
          exit 1
        fi
        namespace=$(yq eval '.metadata.namespace' namespace.yaml)
        if [[ -z "$namespace" ]]; then
          echo "::error::Kubernetes namespace not found in namespace.yml"
          exit 1
        fi
        echo "Namespace: $namespace"
    - name: Generate the config map file content and create ConfigMap File
      run: |
          config_map_file="config-map-${namespace}-${{ github.event.pull_request.number }}.yml"
          echo "apiVersion: v1" >> $config_map_file
          echo "kind: ConfigMap" >> $config_map_file
          echo "metadata:" >> $config_map_file
          echo "  name: $namespace-configmap" >> $config_map_file
          echo "data:" >> $config_map_file
          echo "  Namespace: ${namespace}" >> $config_map_file
          echo "  prNumber: ${{ github.event.pull_request.number }}" >> $config_map_file          

    - name: Set Git config
      run: |
          git config --local user.email "dev@null"
          git config --local user.name "CI Bot"

    - name: Add File and Merge to Developer branch
      run: |
        commitId=$(echo $GITHUB_SHA | cut -c1-7)
        echo "Commit ID = " ${commitId}
        if [ ! -z "${commitId}" ]; then 
          git checkout dev
          git fetch origin pull/${{ github.event.pull_request.number }}/head:dev
          git add $config_map_file
          git commit -m "Add config map for namespace $namespace and PR number ${{ github.event.pull_request.number }}"
          git push origin dev
        fi